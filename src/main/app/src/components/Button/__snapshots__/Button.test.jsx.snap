// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with color 1`] = `
.c0 {
  cursor: pointer;
  border: 0px none;
  box-shadow: 0 0 0 0 transparent;
  outline: none;
  padding: 6px 16px;
  border-radius: 4px;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  -webkit-transition: box-shadow 0.25s,background-color 0.25s,border-color 0.25s,color 0.25s;
  transition: box-shadow 0.25s,background-color 0.25s,border-color 0.25s,color 0.25s;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  border-color: #159ecb;
  background-color: #159ecb;
  color: #ffffff;
  font-size: 1rem;
  padding: 6px 16px;
}

.c0:hover,
.c0:active {
  border-color: #2abae9;
  background-color: #2abae9;
}

.c0:focus {
  box-shadow: 0 0 0 3px rgba(21,158,203,0.3);
}

<ForwardRef
  color="primary"
>
  <styled.button
    as={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      }
    }
    color="primary"
    disabled={false}
    fullWidth={false}
    size="medium"
    variant="contained"
  >
    <ForwardRef
      className="c0"
      color="primary"
      disabled={false}
      fullWidth={false}
      size="medium"
      variant="contained"
    >
      <button
        className="c0"
        color="primary"
        disabled={false}
        fullWidth={false}
        size="medium"
        type="button"
        variant="contained"
      >
        Primary button
      </button>
    </ForwardRef>
  </styled.button>
</ForwardRef>
`;

exports[`renders correctly with color 2`] = `
.c0 {
  cursor: pointer;
  border: 0px none;
  box-shadow: 0 0 0 0 transparent;
  outline: none;
  padding: 6px 16px;
  border-radius: 4px;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  -webkit-transition: box-shadow 0.25s,background-color 0.25s,border-color 0.25s,color 0.25s;
  transition: box-shadow 0.25s,background-color 0.25s,border-color 0.25s,color 0.25s;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  border-color: #999999;
  background-color: #999999;
  color: #ffffff;
  font-size: 1rem;
  padding: 6px 16px;
}

.c0:hover,
.c0:active {
  border-color: #b3b3b3;
  background-color: #b3b3b3;
}

.c0:focus {
  box-shadow: 0 0 0 3px rgba(153,153,153,0.3);
}

<ForwardRef
  color="secondary"
>
  <styled.button
    as={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      }
    }
    color="secondary"
    disabled={false}
    fullWidth={false}
    size="medium"
    variant="contained"
  >
    <ForwardRef
      className="c0"
      color="secondary"
      disabled={false}
      fullWidth={false}
      size="medium"
      variant="contained"
    >
      <button
        className="c0"
        color="secondary"
        disabled={false}
        fullWidth={false}
        size="medium"
        type="button"
        variant="contained"
      >
        Secondary button
      </button>
    </ForwardRef>
  </styled.button>
</ForwardRef>
`;

exports[`renders correctly with variant 1`] = `
.c0 {
  cursor: pointer;
  border: 0px none;
  box-shadow: 0 0 0 0 transparent;
  outline: none;
  padding: 6px 16px;
  border-radius: 4px;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  -webkit-transition: box-shadow 0.25s,background-color 0.25s,border-color 0.25s,color 0.25s;
  transition: box-shadow 0.25s,background-color 0.25s,border-color 0.25s,color 0.25s;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  border-color: #159ecb;
  background-color: #159ecb;
  color: #ffffff;
  font-size: 1rem;
  padding: 6px 16px;
}

.c0:hover,
.c0:active {
  border-color: #2abae9;
  background-color: #2abae9;
}

.c0:focus {
  box-shadow: 0 0 0 3px rgba(21,158,203,0.3);
}

<ForwardRef
  variant="contained"
>
  <styled.button
    as={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      }
    }
    color="primary"
    disabled={false}
    fullWidth={false}
    size="medium"
    variant="contained"
  >
    <ForwardRef
      className="c0"
      color="primary"
      disabled={false}
      fullWidth={false}
      size="medium"
      variant="contained"
    >
      <button
        className="c0"
        color="primary"
        disabled={false}
        fullWidth={false}
        size="medium"
        type="button"
        variant="contained"
      >
        Contained button
      </button>
    </ForwardRef>
  </styled.button>
</ForwardRef>
`;

exports[`renders correctly with variant 2`] = `
.c0 {
  cursor: pointer;
  border: 0px none;
  box-shadow: 0 0 0 0 transparent;
  outline: none;
  padding: 6px 16px;
  border-radius: 4px;
  font-family: 'Roboto',sans-serif;
  font-size: 1rem;
  line-height: 1.5;
  white-space: nowrap;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  box-sizing: border-box;
  -webkit-transition: box-shadow 0.25s,background-color 0.25s,border-color 0.25s,color 0.25s;
  transition: box-shadow 0.25s,background-color 0.25s,border-color 0.25s,color 0.25s;
  font-weight: 500;
  -webkit-text-decoration: none;
  text-decoration: none;
  background-color: transparent;
  padding: 4px 16px;
  border: 2px solid #159ecb;
  color: #159ecb;
  font-size: 1rem;
  padding: 4px 16px;
}

.c0:hover,
.c0:active {
  border-color: #2abae9;
  color: #2abae9;
}

.c0:focus {
  box-shadow: 0 0 0 3px rgba(21,158,203,0.3);
}

<ForwardRef
  variant="outlined"
>
  <styled.button
    as={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      }
    }
    color="primary"
    disabled={false}
    fullWidth={false}
    size="medium"
    variant="outlined"
  >
    <ForwardRef
      className="c0"
      color="primary"
      disabled={false}
      fullWidth={false}
      size="medium"
      variant="outlined"
    >
      <button
        className="c0"
        color="primary"
        disabled={false}
        fullWidth={false}
        size="medium"
        type="button"
        variant="outlined"
      >
        Outlined button
      </button>
    </ForwardRef>
  </styled.button>
</ForwardRef>
`;
