// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getValintaperusteByValues returns correct valintaperuste given form values 1`] = `
Object {
  "hakutapaKoodiUri": "tapa_1#1",
  "kielivalinta": Array [
    "fi",
    "sv",
  ],
  "kohdejoukkoKoodiUri": "joukko_1#1",
  "koulutustyyppi": "tyyppi_1#1",
  "metadata": Object {
    "kielitaitovaatimukset": Array [
      Object {
        "kieliKoodiUri": "kieli_1#1",
        "kielitaidonVoiOsoittaa": Array [
          Object {
            "kielitaitoKoodiUri": "osoitustapa_1#1",
            "lisatieto": Object {},
          },
          Object {
            "kielitaitoKoodiUri": "osoitustapa_2#1",
            "lisatieto": Object {},
          },
          Object {
            "kielitaitoKoodiUri": "kielitaidonosoittaminen_04#1",
            "lisatieto": Object {
              "fi": "Fi kuvaus",
              "sv": "Sv kuvaus",
            },
          },
        ],
        "vaatimukset": Array [
          Object {
            "kielitaitovaatimusKoodiUri": "tyyppi_1#1",
            "kielitaitovaatimusKuvaukset": Array [
              Object {
                "kielitaitovaatimusKuvausKoodiUri": "kuvaus_1#1",
                "kielitaitovaatimusTaso": "erinomainen",
              },
            ],
          },
          Object {
            "kielitaitovaatimusKoodiUri": "tyyppi_2#1",
            "kielitaitovaatimusKuvaukset": Array [
              Object {
                "kielitaitovaatimusKuvausKoodiUri": "kuvaus_2#1",
                "kielitaitovaatimusTaso": "ok",
              },
            ],
          },
        ],
      },
    ],
    "koulutustyyppi": "tyyppi_1#1",
    "kuvaus": Object {
      "fi": "<h1>Fi kuvaus</h1>",
      "sv": "<h1>Sv kuvaus</h1>",
    },
    "osaamistaustaKoodiUrit": Array [
      "tausta_1#1",
      "tausta_2#1",
    ],
    "valintatavat": Array [
      Object {
        "enimmaispisteet": 20,
        "kaytaMuuntotaulukkoa": false,
        "kuvaus": Object {
          "fi": "Fi kuvaus",
          "sv": "Sv kuvaus",
        },
        "kynnysehto": Object {
          "fi": "Fi kynnysehto",
          "sv": "Sv kynnysehto",
        },
        "nimi": Object {
          "fi": "Fi nimi",
          "sv": "Sv nimi",
        },
        "sisalto": Array [
          Object {
            "data": Object {
              "fi": "<h2>Fi sisalto</h2>",
              "sv": "<h2>Sv sisalto</h2>",
            },
            "tyyppi": "teksti",
          },
          Object {
            "data": Object {
              "rows": Array [
                Object {
                  "columns": Array [
                    Object {
                      "index": 0,
                      "text": Object {
                        "fi": "Fi column1",
                        "sv": "Sv column1",
                      },
                    },
                    Object {
                      "index": 1,
                      "text": Object {
                        "fi": "Fi column2",
                        "sv": "Sv column2",
                      },
                    },
                  ],
                  "index": 0,
                },
                Object {
                  "columns": Array [
                    Object {
                      "index": 0,
                      "text": Object {
                        "fi": "Fi column3",
                        "sv": "Sv column3",
                      },
                    },
                    Object {
                      "index": 1,
                      "text": Object {
                        "fi": "Fi column4",
                        "sv": "Sv column4",
                      },
                    },
                  ],
                  "index": 1,
                },
              ],
            },
            "tyyppi": "taulukko",
          },
        ],
        "vahimmaispisteet": 10,
        "valintatapaKoodiUri": "tapa_1#1",
      },
    ],
  },
  "nimi": Object {
    "fi": "Fi nimi",
    "sv": "Sv nimi",
  },
}
`;

exports[`getValuesByValintaperuste returns correct form values given valintaperuste 1`] = `
Object {
  "hakutavanRajaus": Object {
    "hakutapa": "tapa_1#1",
  },
  "kielitaitovaatimukset": Object {
    "kielet": Array [
      Object {
        "kieli": Object {
          "value": "kieli_1#1",
        },
        "kuvaukset": Object {
          "tyyppi_1#1": Array [
            Object {
              "kuvaus": Object {
                "value": "kuvaus_1#1",
              },
              "taso": "erinomainen",
            },
          ],
          "tyyppi_2#1": Array [
            Object {
              "kuvaus": Object {
                "value": "kuvaus_2#1",
              },
              "taso": "ok",
            },
          ],
        },
        "muutOsoitustavat": Array [
          Object {
            "kuvaus": Object {
              "fi": "Fi kuvaus",
              "sv": "Sv kuvaus",
            },
          },
        ],
        "osoitustavat": Array [
          "osoitustapa_1#1",
          "osoitustapa_2#1",
        ],
        "tyyppi": Object {
          "tyyppi_1#1": true,
          "tyyppi_2#1": true,
        },
      },
    ],
  },
  "kieliversiot": Object {
    "languages": Array [
      "fi",
      "sv",
    ],
  },
  "kohdejoukonRajaus": Object {
    "kohdejoukko": Object {
      "value": "joukko_1#1",
    },
  },
  "loppukuvaus": Object {
    "kuvaus": Object {
      "fi": EditorState {
        "_immutable": Immutable.Record {
          "allowUndo": true,
          "currentContent": Immutable.Record {
            "entityMap": Object {
              "__add": [Function],
              "__create": [Function],
              "__get": [Function],
              "__getLastCreatedEntityKey": [Function],
              "__mergeData": [Function],
              "__replaceData": [Function],
              "add": [Function],
              "create": [Function],
              "get": [Function],
              "getLastCreatedEntityKey": [Function],
              "mergeData": [Function],
              "replaceData": [Function],
            },
            "blockMap": Immutable.OrderedMap {
              "eprv8": Immutable.Record {
                "key": "eprv8",
                "type": "header-one",
                "text": "Fi kuvaus",
                "characterList": Immutable.List [
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                ],
                "depth": 0,
                "data": Immutable.Map {},
              },
            },
            "selectionBefore": Immutable.Record {
              "anchorKey": "eprv8",
              "anchorOffset": 0,
              "focusKey": "eprv8",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "selectionAfter": Immutable.Record {
              "anchorKey": "eprv8",
              "anchorOffset": 0,
              "focusKey": "eprv8",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
          },
          "decorator": CompositeDraftDecorator {
            "_decorators": Array [
              Object {
                "component": [Function],
                "strategy": [Function],
              },
            ],
          },
          "directionMap": Immutable.OrderedMap {
            "eprv8": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Immutable.Stack [],
          "selection": Immutable.Record {
            "anchorKey": "eprv8",
            "anchorOffset": 0,
            "focusKey": "eprv8",
            "focusOffset": 0,
            "isBackward": false,
            "hasFocus": false,
          },
          "treeMap": Immutable.OrderedMap {
            "eprv8": Immutable.List [
              Immutable.Record {
                "start": 0,
                "end": 9,
                "decoratorKey": null,
                "leaves": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 9,
                  },
                ],
              },
            ],
          },
          "undoStack": Immutable.Stack [],
        },
      },
      "sv": EditorState {
        "_immutable": Immutable.Record {
          "allowUndo": true,
          "currentContent": Immutable.Record {
            "entityMap": Object {
              "__add": [Function],
              "__create": [Function],
              "__get": [Function],
              "__getLastCreatedEntityKey": [Function],
              "__mergeData": [Function],
              "__replaceData": [Function],
              "add": [Function],
              "create": [Function],
              "get": [Function],
              "getLastCreatedEntityKey": [Function],
              "mergeData": [Function],
              "replaceData": [Function],
            },
            "blockMap": Immutable.OrderedMap {
              "a8qms": Immutable.Record {
                "key": "a8qms",
                "type": "header-one",
                "text": "Sv kuvaus",
                "characterList": Immutable.List [
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                  Immutable.Record {
                    "style": Immutable.OrderedSet [],
                    "entity": null,
                  },
                ],
                "depth": 0,
                "data": Immutable.Map {},
              },
            },
            "selectionBefore": Immutable.Record {
              "anchorKey": "a8qms",
              "anchorOffset": 0,
              "focusKey": "a8qms",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
            "selectionAfter": Immutable.Record {
              "anchorKey": "a8qms",
              "anchorOffset": 0,
              "focusKey": "a8qms",
              "focusOffset": 0,
              "isBackward": false,
              "hasFocus": false,
            },
          },
          "decorator": CompositeDraftDecorator {
            "_decorators": Array [
              Object {
                "component": [Function],
                "strategy": [Function],
              },
            ],
          },
          "directionMap": Immutable.OrderedMap {
            "a8qms": "LTR",
          },
          "forceSelection": false,
          "inCompositionMode": false,
          "inlineStyleOverride": null,
          "lastChangeType": null,
          "nativelyRenderedContent": null,
          "redoStack": Immutable.Stack [],
          "selection": Immutable.Record {
            "anchorKey": "a8qms",
            "anchorOffset": 0,
            "focusKey": "a8qms",
            "focusOffset": 0,
            "isBackward": false,
            "hasFocus": false,
          },
          "treeMap": Immutable.OrderedMap {
            "a8qms": Immutable.List [
              Immutable.Record {
                "start": 0,
                "end": 9,
                "decoratorKey": null,
                "leaves": Immutable.List [
                  Immutable.Record {
                    "start": 0,
                    "end": 9,
                  },
                ],
              },
            ],
          },
          "undoStack": Immutable.Stack [],
        },
      },
    },
  },
  "nimi": Object {
    "nimi": Object {
      "fi": "Fi nimi",
      "sv": "Sv nimi",
    },
  },
  "osaamistausta": Object {
    "osaamistausta": Array [
      Object {
        "value": "tausta_1#1",
      },
      Object {
        "value": "tausta_2#1",
      },
    ],
  },
  "tyyppi": Object {
    "tyyppi": "tyyppi_1#1",
  },
  "valintatapa": Object {
    "valintatavat": Array [
      Object {
        "enimmaispistemaara": 20,
        "kuvaus": Object {
          "fi": "Fi kuvaus",
          "sv": "Sv kuvaus",
        },
        "kynnysehto": Object {
          "fi": "Fi kynnysehto",
          "sv": "Sv kynnysehto",
        },
        "nimi": Object {
          "fi": "Fi nimi",
          "sv": "Sv nimi",
        },
        "sisalto": Array [
          Object {
            "data": Object {
              "fi": EditorState {
                "_immutable": Immutable.Record {
                  "allowUndo": true,
                  "currentContent": Immutable.Record {
                    "entityMap": Object {
                      "__add": [Function],
                      "__create": [Function],
                      "__get": [Function],
                      "__getLastCreatedEntityKey": [Function],
                      "__mergeData": [Function],
                      "__replaceData": [Function],
                      "add": [Function],
                      "create": [Function],
                      "get": [Function],
                      "getLastCreatedEntityKey": [Function],
                      "mergeData": [Function],
                      "replaceData": [Function],
                    },
                    "blockMap": Immutable.OrderedMap {
                      "2bp2f": Immutable.Record {
                        "key": "2bp2f",
                        "type": "header-two",
                        "text": "Fi sisalto",
                        "characterList": Immutable.List [
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                        ],
                        "depth": 0,
                        "data": Immutable.Map {},
                      },
                    },
                    "selectionBefore": Immutable.Record {
                      "anchorKey": "2bp2f",
                      "anchorOffset": 0,
                      "focusKey": "2bp2f",
                      "focusOffset": 0,
                      "isBackward": false,
                      "hasFocus": false,
                    },
                    "selectionAfter": Immutable.Record {
                      "anchorKey": "2bp2f",
                      "anchorOffset": 0,
                      "focusKey": "2bp2f",
                      "focusOffset": 0,
                      "isBackward": false,
                      "hasFocus": false,
                    },
                  },
                  "decorator": CompositeDraftDecorator {
                    "_decorators": Array [
                      Object {
                        "component": [Function],
                        "strategy": [Function],
                      },
                    ],
                  },
                  "directionMap": Immutable.OrderedMap {
                    "2bp2f": "LTR",
                  },
                  "forceSelection": false,
                  "inCompositionMode": false,
                  "inlineStyleOverride": null,
                  "lastChangeType": null,
                  "nativelyRenderedContent": null,
                  "redoStack": Immutable.Stack [],
                  "selection": Immutable.Record {
                    "anchorKey": "2bp2f",
                    "anchorOffset": 0,
                    "focusKey": "2bp2f",
                    "focusOffset": 0,
                    "isBackward": false,
                    "hasFocus": false,
                  },
                  "treeMap": Immutable.OrderedMap {
                    "2bp2f": Immutable.List [
                      Immutable.Record {
                        "start": 0,
                        "end": 10,
                        "decoratorKey": null,
                        "leaves": Immutable.List [
                          Immutable.Record {
                            "start": 0,
                            "end": 10,
                          },
                        ],
                      },
                    ],
                  },
                  "undoStack": Immutable.Stack [],
                },
              },
              "sv": EditorState {
                "_immutable": Immutable.Record {
                  "allowUndo": true,
                  "currentContent": Immutable.Record {
                    "entityMap": Object {
                      "__add": [Function],
                      "__create": [Function],
                      "__get": [Function],
                      "__getLastCreatedEntityKey": [Function],
                      "__mergeData": [Function],
                      "__replaceData": [Function],
                      "add": [Function],
                      "create": [Function],
                      "get": [Function],
                      "getLastCreatedEntityKey": [Function],
                      "mergeData": [Function],
                      "replaceData": [Function],
                    },
                    "blockMap": Immutable.OrderedMap {
                      "6eaei": Immutable.Record {
                        "key": "6eaei",
                        "type": "header-two",
                        "text": "Sv sisalto",
                        "characterList": Immutable.List [
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                          Immutable.Record {
                            "style": Immutable.OrderedSet [],
                            "entity": null,
                          },
                        ],
                        "depth": 0,
                        "data": Immutable.Map {},
                      },
                    },
                    "selectionBefore": Immutable.Record {
                      "anchorKey": "6eaei",
                      "anchorOffset": 0,
                      "focusKey": "6eaei",
                      "focusOffset": 0,
                      "isBackward": false,
                      "hasFocus": false,
                    },
                    "selectionAfter": Immutable.Record {
                      "anchorKey": "6eaei",
                      "anchorOffset": 0,
                      "focusKey": "6eaei",
                      "focusOffset": 0,
                      "isBackward": false,
                      "hasFocus": false,
                    },
                  },
                  "decorator": CompositeDraftDecorator {
                    "_decorators": Array [
                      Object {
                        "component": [Function],
                        "strategy": [Function],
                      },
                    ],
                  },
                  "directionMap": Immutable.OrderedMap {
                    "6eaei": "LTR",
                  },
                  "forceSelection": false,
                  "inCompositionMode": false,
                  "inlineStyleOverride": null,
                  "lastChangeType": null,
                  "nativelyRenderedContent": null,
                  "redoStack": Immutable.Stack [],
                  "selection": Immutable.Record {
                    "anchorKey": "6eaei",
                    "anchorOffset": 0,
                    "focusKey": "6eaei",
                    "focusOffset": 0,
                    "isBackward": false,
                    "hasFocus": false,
                  },
                  "treeMap": Immutable.OrderedMap {
                    "6eaei": Immutable.List [
                      Immutable.Record {
                        "start": 0,
                        "end": 10,
                        "decoratorKey": null,
                        "leaves": Immutable.List [
                          Immutable.Record {
                            "start": 0,
                            "end": 10,
                          },
                        ],
                      },
                    ],
                  },
                  "undoStack": Immutable.Stack [],
                },
              },
            },
            "tyyppi": "teksti",
          },
          Object {
            "data": Object {
              "rows": Array [
                Object {
                  "columns": Array [
                    Object {
                      "index": 0,
                      "text": Object {
                        "fi": "Fi column1",
                        "sv": "Sv column1",
                      },
                    },
                    Object {
                      "index": 1,
                      "text": Object {
                        "fi": "Fi column2",
                        "sv": "Sv column2",
                      },
                    },
                  ],
                  "index": 0,
                },
                Object {
                  "columns": Array [
                    Object {
                      "index": 0,
                      "text": Object {
                        "fi": "Fi column3",
                        "sv": "Sv column3",
                      },
                    },
                    Object {
                      "index": 1,
                      "text": Object {
                        "fi": "Fi column4",
                        "sv": "Sv column4",
                      },
                    },
                  ],
                  "index": 1,
                },
              ],
            },
            "tyyppi": "taulukko",
          },
        ],
        "tapa": Object {
          "value": "tapa_1#1",
        },
        "vahimmaispistemaara": 10,
      },
    ],
  },
}
`;
